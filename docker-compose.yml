version: '3.4'

services:
  bookingtablesapi:
     image: bookingtablesapi
     build:
      context: .
      dockerfile: BookingTables.API/Dockerfile
     environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=aurum123LIKE
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      #- ConnectionString=Server=bookingtablesapi-db;Database=BookingTableApp;User=SA;Password=aurum123ILIKE
      - ConnectionString="server=host.docker.internal;database=BookingTableApp;Integrated Security=false;User Id=sa;Password=aurum123ILIKE"
     ports:
      - "5050:443"
     depends_on:
      #- bookingtablesapi-db
      - cache
      - rabbitmq
      - identity
     links:
     - "cache"
     volumes:
      - ~/.aspnet/https:/https:ro


  #bookingtablesapi-db:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   environment: ${DOCKER_REGISTRY-}
  #    - ACCEPT_EULA=Y
  #    - MSSQL_SA_PASSWORD=aurum123ILIKE   
  #   ports:
  #    - 1433:1433
  #   container_name: sqlDatabase

  cache:
    image: redis:latest
    restart: always
    ports:
     - 6379:6379
    container_name: redis

  rabbitmq:
    image: rabbitmq:3-management
    ports:
     - 5672:5672
     - 15672:15672
    container_name: rabbit
    restart: always

  emailsender:
    build:
      context: ./../EmailSender/
      dockerfile: ./../EmailSender/EmailSender/Dockerfile
    depends_on:
     - rabbitmq
     - emailsender-db
    ports:
    - 5070:80
    container_name: emailsender

  identity:
    image: ${DOCKER_REGISTRY-}identity
    ports:
      - 5090:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=aurum123LIKE
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    build:
      context: ./../Identity/
      dockerfile: ./../Identity/Identity/Dockerfile
    container_name: identity
    volumes:
      - ~/.aspnet/https:/https:ro
  
  emailsender-db:
   image: mongo
   ports:
      - 27017:80
   container_name: mongo
   depends_on: 
   - rabbitmq

  booking-table-front:
   build:
    context: ./../BookingTablesFront/
    dockerfile: ./../BookingTablesFront/Dockerfile
   container_name: booking-table-front
   ports:
     - 80:80

  elasticsearch:
   container_name: elasticsearch
   image: elasticsearch:8.4.3
   ports:
    - 9200:9200
   volumes:
    - esdata:/usr/share/elasticsearch/data
   environment:
    - xpack.monitoring.templates.enabled=true
    - xpack.monitoring.templates.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
    - xpack.security.enabled=false


  kibana:
   container_name: kibana
   image: kibana:8.4.3
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   environment:
    - ELASTICSEARCH_URL=http://localhost:9200


  
volumes:
    esdata:
        driver: local


    


     